@*@model IEnumerable<ImportModel.PlantName>*@
@model PagedList.IPagedList<ImportModel.PlantName>
@using PagedList.Mvc;

@{
                /**/

                ViewBag.Title = "Index";
                Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Plant Name Management</h2>

<table >
    <tr>
        <td>
        @using (Html.BeginForm("Index", "PlantNames", FormMethod.Get))
        {
            <p>
                Find by name or sku :<br /> @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)
                <input type="submit" value="Search" />
            </p>
        }
        </td>
        <td style="padding: 50px">
            <p>
               
            </p>
         </td>
    </tr>
</table>

<table class="table">

    <tr>
        <th>
            @*@Html.ActionLink("SKU", "Index", new { sortOrder = ViewBag.SkuSortParm })*@
            @Html.ActionLink("SKU", "Index", new { sortOrder = ViewBag.SkuSortParm, currentFilter = ViewBag.CurrentFilter }, new { @class = "btn btn-primary" })
        </th>
        <th>
            @*@Html.ActionLink("Plant Name", "Index", new { sortOrder = ViewBag.NameSortParm })*@
            @Html.ActionLink("Plant Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter }, new { @class = "btn btn-primary" })
        </th>


        <th>@Html.ActionLink("Add Plant Name", "Create", null, new { @class = "btn btn-primary" })</th>


        @foreach (var item in Model)
        {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Sku)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.PlantId }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.PlantId }) 
            </td>
        </tr>
    }

    </table>
    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))

