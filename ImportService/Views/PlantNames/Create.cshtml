@model ImportModel.PlantName

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h3>Add a Single Plant Name</h3>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Sku, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sku, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Sku, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


<hr class="border border-primary" />
<h3>Add a batch of Plant Names</h3>
<p>This requires an Excel File from GrowMaster</p>

@using (Html.BeginForm("GetStockFile", "PlantNames", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <label for="exampleFormControlFile1">Select File to Import</label>
    <div class="form-group">
        <input type="file" id="file" name="file" class="form-control-file" />
    </div>

    <div class="form-group">
        <input type="submit" name="btnUpload" value="Upload" />
    </div>
}


<hr class="border border-primary" />
<h4>This Control Synchnonises the Name list with the Batches</h4>
<p>Names are never deleted via this process - so we may end up with Names with no Batches</p>
<div>
    @Html.ActionLink("Synchronise Name List", "SyncNames", null, new { @class = "btn btn-primary" })
</div>



<hr class="border border-primary" />

<div>
    @Html.ActionLink("Back to Name List", "Index", null, new { @class = "btn btn-primary" })
</div>
