@model PagedList.IPagedList<ImportService.DTO.BatchVM>
@using PagedList.Mvc;

@{
    /**/

    ViewBag.Title = "Last Modified 14-4-20";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Batch Listings</h2>
@using (Html.BeginForm("Index", "readBatch", FormMethod.Get))
{
    <table>
        <tr>
            <td>
                @{
                    if (Convert.ToBoolean(ViewBag.hasPB) == true)
                    { <p>Include PB:  @Html.CheckBox("hasPB", true)  </p> }

                if (Convert.ToBoolean(ViewBag.hasPB) == false)
                { <p>Include PB:  @Html.CheckBox("hasPB", false)  </p> }

            if (Convert.ToBoolean(ViewBag.hasPB) == false)
            { <p>Include Local:  @Html.CheckBox("hasLocal", false)  </p> }

        if (Convert.ToBoolean(ViewBag.hasPB) == true)
        { <p>Include Local:  @Html.CheckBox("hasLocal", true)  </p> }

                }
            </td>
        </tr>
        <tr>
            <td>
                <p>
                    Find by name or sku :<br /> @Html.TextBox("SearchString", ViewBag.CurrentFilter as string)

                </p>


            </td>


        
            </tr>
        <tr>    
            <td>
                <p>
                    Filter by Form Size :<br /> @Html.TextBox("FormSearchString", ViewBag.FormCurrentFilter as string)
                </p>
            </td>
        </tr>
        <tr>
            <td><input type="submit" value="Search" /></td>
        </tr>
    </table>
}
<hr />
    <table class="table">

        <tr>
            <th>
                @*@Html.ActionLink("SKU", "Index", new { sortOrder = ViewBag.SkuSortParm })*@
                @Html.ActionLink("SKU", "Index", new { sortOrder = ViewBag.SkuSortParm, currentFilter = ViewBag.CurrentFilter }, new { @class = "btn btn-primary" })
            </th>
            <th>
                @*@Html.ActionLink("Plant Name", "Index", new { sortOrder = ViewBag.NameSortParm })*@
                @Html.ActionLink("Plant Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter }, new { @class = "btn btn-primary" })
            </th>
            <th>
                Form
                @*@Html.ActionLink("Plant Name", "Index", new { sortOrder = ViewBag.NameSortParm })*@
            <th>
                Location
            </th>




            @*<th>@Html.ActionLink("Add Plant Name", "Create", null, new { @class = "btn btn-primary" })</th>*@


            @foreach (var item in Model)
            {
                
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Sku)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FormSize)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Location)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Comments)
            </td>
            <td>

                @*&pound;&nbsp;
            @{
                if (item.WholesalePrice != null)
                {
                    var p = item.WholesalePrice;
                    decimal d = (decimal)p / 100m;
                    @d

                }*@


                @Html.ActionLink("Select", "Edit", new { id = item.BatchId }, new { @class = "btn btn-primary" })


            </td>
        </tr>
            }

        </table>

        <br />
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

        @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))


